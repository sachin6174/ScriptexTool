# SwiftLint Configuration for Error Detection
# This configuration enables comprehensive error and style checking

# Enable all rules by default, then disable specific ones
opt_in_rules:
  - attributes
  - closure_end_indentation
  - closure_spacing
  - collection_alignment
  - contains_over_filter_count
  - contains_over_filter_is_empty
  - contains_over_first_not_nil
  - discouraged_object_literal
  - empty_collection_literal
  - empty_count
  - empty_string
  - empty_xctest_method
  - explicit_init
  - extension_access_modifier
  - fallthrough
  - fatal_error_message
  - file_header
  - first_where
  - force_unwrapping
  - function_default_parameter_at_end
  - implicit_return
  - joined_default_parameter
  - last_where
  - legacy_random
  - literal_expression_end_indentation
  - modifier_order
  - multiline_arguments
  - multiline_function_chains
  - multiline_literal_brackets
  - multiline_parameters
  - nimble_operator
  - no_space_in_method_call
  - number_separator
  - object_literal
  - operator_usage_whitespace
  - overridden_super_call
  - override_in_extension
  - pattern_matching_keywords
  - prefer_self_type_over_type_of_self
  - prefixed_toplevel_constant
  - prohibited_interface_builder
  - prohibited_super_call
  - quick_discouraged_call
  - quick_discouraged_focused_test
  - quick_discouraged_pending_test
  - reduce_into
  - redundant_nil_coalescing
  - redundant_type_annotation
  - single_test_class
  - sorted_first_last
  - sorted_imports
  - static_operator
  - strong_iboutlet
  - toggle_bool
  - trailing_closure
  - unneeded_parentheses_in_closure_argument
  - untyped_error_in_catch
  - unused_import
  - unused_private_declaration
  - vertical_parameter_alignment_on_call
  - vertical_whitespace_closing_braces
  - vertical_whitespace_opening_braces
  - yoda_condition

# Disable rules that might be too strict for educational examples
disabled_rules:
  - file_length
  - function_body_length
  - type_body_length
  - cyclomatic_complexity

# Warning thresholds
line_length: 120
function_body_length:
  warning: 50
  error: 100

type_body_length:
  warning: 200
  error: 300

file_length:
  warning: 400
  error: 1000

# Naming conventions
identifier_name:
  min_length: 1
  max_length:
    warning: 40
    error: 60
  excluded:
    - id
    - i
    - j
    - k
    - x
    - y
    - z

type_name:
  min_length: 3
  max_length:
    warning: 40
    error: 50

# Force unwrapping configuration
force_unwrapping:
  severity: error

# Force cast configuration  
force_cast:
  severity: error

# Custom rules for educational purposes
custom_rules:
  # Detect potential retain cycles
  retain_cycle_check:
    name: "Potential Retain Cycle"
    regex: '(?<!weak\s)var\s+\w+:\s*\w+\?\s*$'
    message: "Consider using 'weak' for reference properties to avoid retain cycles"
    severity: warning

  # Detect force unwrapping in dangerous contexts
  dangerous_force_unwrap:
    name: "Dangerous Force Unwrap"
    regex: '\w+\!\s*(?=\)|$|\s)'
    message: "Force unwrapping can cause runtime crashes. Consider using optional binding or nil coalescing"
    severity: error

  # Detect unused variables (basic pattern)
  unused_variable_basic:
    name: "Potentially Unused Variable"
    regex: '(?:let|var)\s+(\w+)(?:\s*:\s*\w+)?\s*=.*$'
    message: "Variable may be unused. Consider using '_' if intentionally unused"
    severity: warning

# Include/exclude paths
included:
  - Sources
  - Tests

excluded:
  - .build
  - error_logs

# Reporter type for different output formats
reporter: "xcode" # "json", "csv", "checkstyle", "junit", "html", "emoji"